import React, { useEffect, useState } from 'react';

function LocationsComponent() {
    const [locations, setLocations] = useState([]);
    const [error, setError] = useState(null);
    const [isLoading, setIsLoading] = useState(true);

    useEffect(() => {
        async function fetchLocations() {
            const apiUrl = `${process.env.REACT_APP_API_URL}/locations/`;
            try {
                const response = await fetch(apiUrl);
                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }
                const data = await response.json();
                setLocations(data);
                setIsLoading(false);
            } catch (error) {
                console.error('Error fetching locations:', error);
                setError(error.message);
                setIsLoading(false);
            }
        }
        
        fetchLocations();
    }, []);

    return (
        <div>
            <h1>Locations</h1>
            {isLoading && <p>Loading...</p>}
            {error && <p>Error: {error}</p>}
            {!error && !isLoading && locations.length > 0 && (
                <div>
                    {locations.map(location => (
                        <div key={location.id} style={{ margin: '20px', padding: '10px', border: '1px solid #ccc' }}>
                            <h2>{location.title}</h2>
                            <p>{location.description}</p>
                            {location.image && (
                                <img src={location.image} alt={location.title} style={{ maxWidth: '100%', height: 'auto' }} />
                            )}
                            <p>Coordinates: {location.coordinates}</p>
                        </div>
                    ))}
                </div>
            )}
            {!error && !isLoading && locations.length === 0 && <p>No locations found.</p>}
        </div>
    );
}

export default LocationsComponent;